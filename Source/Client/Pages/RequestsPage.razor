@page "/requests"
@using System.Security.Claims
@inject IRequestService RequestService
@inject IAuthService AuthService

<section class="hero is-medium">
  <div class="hero-body">
    <p class="title">
      My requests
    </p>
    <p class="subtitle">
      Manage my requests
    </p>
    <div >
       
        <RequestsGroup 
          ShowAddNew="true" 
          ProfilePictureHandler="(k => profileUrl)" 
          UsernameHandler="(k => userName)" 
          LoadDataHandler="(page => RequestService.GetMines(new QueryParameters(){Count = 9, Page = page}))" ></RequestsGroup>
         
    </div>
  </div>
</section>


@code{

  [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }

  private string userName;
  private string profileUrl;


  protected override async Task OnParametersSetAsync()
  {
      var userInformation = await AuthenticationState;
      userName = userInformation.User.Claims.SingleOrDefault(k => k.Type == "UserName")?.Value;
      profileUrl = userInformation.User.Claims.SingleOrDefault(k => k.Type == "ProfileImage")?.Value;
  }
  
}

        